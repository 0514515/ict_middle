<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SalaryRepository">

	<!-- 로그인 아이디로 기본급 항목 전체 조회 -->
	<select id="selectBaseSalaryByLoginId" parameterType="String"
		resultType="Salary">
		SELECT bs.id id, bs.name name, bs.amount amount,
		bs.company_id company_id
		FROM basic_salary bs
		JOIN staff s ON
		bs.company_id = s.company_id
		WHERE s.login_id = #{loginId}
		ORDER BY
		bs.id DESC
	</select>

	<!-- 해당하는 기본급 항목을 받고있는 사원들 조회 -->
	<select id="selectStaffInfoByBaseSalary" parameterType="Salary"
		resultType="Staff">
		SELECT d.name departmentName, s.name staffName, bs.name
		basicSalaryName,
		bs.amount amount
		FROM staff s INNER JOIN BASIC_SALARY
		bs ON s.SALARY_ID = bs.id
		INNER JOIN DEPARTMENT d ON d.ID =
		s.DEPARTMENT_ID
		WHERE bs.company_id=#{companyId} AND bs.id=#{id}
		ORDER
		BY bs.id
	</select>

	<!-- 기본급 추가 -->
	<insert id="insertSalary" parameterType="Salary">
		INSERT INTO
		basic_salary(id, name, amount,company_id)
		VALUES
		(seq_basic_salary_id.nextval, #{name}, #{amount}, #{companyId})
	</insert>

	<!-- 기본급 업데이트 -->
	<update id="updateSalary" parameterType="Salary">
		UPDATE basic_salary
		SET
		name = #{name}, amount=#{amount}
		WHERE id = #{id} AND company_id =
		#{companyId}
	</update>

	<!-- 기본급 삭제 -->
	<delete id="deleteSalary" parameterType="Salary">
		DELETE FROM basic_salary
		WHERE id=#{id} AND company_id=#{companyId}
	</delete>

	<!-- 사원의 기본급 업데이트 -->
	<update id="updateStaffBaseSalary" parameterType="Staff">
		UPDATE staff
		SET
		salary_id = #{basicSalaryId}
		WHERE id = #{staffId}
	</update>

	<!-- 사원 기본급 설정 페이지 용 / 기본급을 포함한 사원 정보 -->
	<select id="selectStaffWithSalaryByLoginId"
		parameterType="String" resultType="Staff">
		SELECT s.id staffId, s.name staffName, bs.id
		basicSalaryId ,bs.amount
		basicSalaryAmount, bs.name basicSalaryName
		FROM staff s INNER JOIN
		basic_salary bs ON s.SALARY_ID = bs.ID
		<where>
			s.company_id=(SELECT company_id
			FROM staff
			WHERE login_id=#{loginId})
			<if test="searchOption != null and searchOption != ''">
				<choose>
					<when test="searchOption == 'staffName'">
						AND s.name LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if>
		</where>
	</select>

	<!-- 사원 기본급 설정 페이지 용 카운트 -->
	<select id="selectStaffCountWithSalaryByLoginId"
		parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM staff s INNER JOIN basic_salary bs ON s.SALARY_ID
		= bs.ID
		<where>
			s.company_id=(SELECT company_id
			FROM staff
			WHERE login_id=#{loginId})
			<if test="searchOption != null and searchOption != ''">
				<choose>
					<when test="searchOption == 'staffName'">
						AND s.name LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if>
		</where>
	</select>

	<!-- 추가 수당 목록 전체 조회 -->
	<select id="selectAllCommissionByLoginId" parameterType="String"
		resultType="Commission">
		SELECT cm.id id,
		cm.name name, cm.default_amount
		defaultAmount, cm.company_id
		companyId
		FROM COMMISSION cm
		WHERE
		cm.company_id = (SELECT company_id
		FROM staff s
		WHERE
		s.login_id=#{loginId})
	</select>

	<!-- 추가 수당 항목 추가 -->
	<insert id="insertCommission" parameterType="Commission">
		INSERT INTO
		commission(id,name,default_amount,company_id)
		VALUES
		(seq_commission_id.nextval,#{name},#{defaultAmount},#{companyId})
	</insert>

	<!-- 추가 수당 업데이트 -->
	<update id="updateCommission" parameterType="Commission">
		UPDATE commission
		SET
		default_amount = #{defaultAmount}
		WHERE id = #{id} AND company_id =
		#{companyId}
	</update>

	<!-- 추가 수당을 받는 사원 조회 -->
	<select id="selectStaffCommission" resultType="StaffCommission">
		SELECT sc.staff_id staffId, c.id commissionId, s.name staffName,
		c.name
		commissionName, sc.check_default_amount checkDefaultAmount,
		CASE
		WHEN sc.check_default_amount = 1 THEN c.default_amount
		ELSE sc.amount
		END amount
		FROM STAFF_COMMISION sc INNER JOIN STAFF s ON sc.STAFF_ID =
		s.ID
		INNER JOIN COMMISSION c ON sc.COMMISSION_ID = c.ID
		WHERE
		sc.COMMISSION_ID IN
		<foreach collection="commissionList" item="commission"
			open="(" separator="," close=")">
			#{commission.id}
		</foreach>
	</select>

	<!-- 사원의 추가 수당 지급 삭제 -->
	<delete id="deleteStaffCommission"
		parameterType="StaffCommission">
		DELETE FROM staff_commision
		WHERE commission_id =
		#{commissionId} AND staff_id = #{staffId}
	</delete>

	<!-- 사원의 추가수당 추가 -->
	<insert id="insertStaffCommission"
		parameterType="StaffCommission">
		INSERT INTO staff_commision(commission_id, staff_id,
		check_default_amount, amount)
		VALUES(${commissionId},${staffId},${checkDefaultAmount},${amount})
	</insert>

	<!-- 급여 명세 : 기본급 조회 -->
	<select id="selectStaffWithBasicSalary" resultType="Staff">
		SELECT s.id
		staffId, s.name staffName, bs.AMOUNT basicSalaryAmount
		FROM
		staff s 
		INNER JOIN 
		BASIC_SALARY bs ON bs.ID =s.SALARY_ID
		WHERE
			s.id IN
		<foreach collection="staffList" item="staff" open="("
			separator="," close=")">
			#{staff.staffId}
		</foreach>
	</select>

	<!-- 급여 명세 : 한 사원이 받는 수당들 조회 -->
	<resultMap id="StaffResultMap" type="Staff">
		<id property="staffId" column="staffId" />
		<result property="staffName" column="name" />
		<collection property="staffCommissionList"
			ofType="StaffCommission">
			<id property="commissionId" column="commissionId" />
			<result property="commissionName" column="commissionName" />
			<result property="amount" column="amount" />
		</collection>
	</resultMap>

	<!-- 급여 명세 : 한 사원이 받는 수당들 조회 -->
	<select id="selectStaffCommission" resultMap="StaffResultMap">
		SELECT
		s.staff_id AS staffId,
		s.staff_name AS staffName,
		sc.commission_id AS commissionId,
		c.name AS commissionName,
		sc.amount AS amount
		FROM
		staff s
		LEFT JOIN
		staff_commission sc ON s.staff_id = sc.staff_id
		LEFT JOIN
		commission c ON sc.commission_id = c.id
		WHERE
		s.staff_id IN
		<foreach item="id" collection="staffIds" open="("
			separator="," close=")">
			#{id}
		</foreach>
		ORDER BY
		s.staff_id;
	</select>
</mapper>