<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommonRepository">

	<!-- 회사 등록 -->
	<insert id="insertCompany" parameterType="Company">
		INSERT INTO
		COMPANY(id,name,address,phone_number,founded_at,created_at,updated_at)
		VALUES
		(seq_company_id.nextval,#{name},#{address},#{phoneNumber},#{foundedAt},sysdate,sysdate)
	</insert>

	<!-- 회사 조회 -->
	<select id="selectCompanyList" resultType="Company">
		SELECT id,name,address,phone_number, TO_CHAR(founded_at,'YYYY-MM-DD')
		founded_at FROM
		COMPANY
		<where>
			<if test="searchOption != null and searchOption != ''">
				AND ${searchOption} LIKE '%' || #{searchKeyword} || '%'
			</if>
		</where>
	</select>

	<!-- 페이지네이션용 페이지 수 조회 (회사) -->
	<select id="selectCompanyCount" resultType="int">
		SELECT COUNT(*)
		FROM company
		<where>
			<if test="searchOption != null and searchOption != ''">
				AND ${searchOption} LIKE '%' || #{searchKeyword} || '%'
			</if>
		</where>
	</select>

	<!-- 관리자 등록 -->
	<insert id="insertCompanyAdministrator"
		parameterType="Administrator">
		INSERT INTO
		STAFF(id, login_id, password, name,
		phone_number, rank, email, hired_date, hiring_status, created_at,
		updated_at, max_leave, leave_count, authority, company_id)
		VALUES
		(seq_staff_id.nextval, #{loginId},#{password}, #{staffName},
		#{phoneNumber},
		'관리자',#{email},sysdate,1,sysdate,sysdate,0,0,9999,#{companyId})
	</insert>

	<!-- 관리자 조회 -->
	<select id="selectCompanyAdministratorList"
		resultType="Administrator">
		SELECT s.id AS staff_id,
		c.id AS company_id,
		c.name AS company_name,
		s.name AS staff_name,
		TO_CHAR(s.created_at, 'YYYY-MM-DD') AS created_at
		FROM staff s
		INNER JOIN department d ON s.department_id = d.id
		INNER
		JOIN company c ON c.id = d.company_id
		<where>
			<!-- 넘어온 searchOption의 값에 따라 검색 옵션을 바꾼다. -->
			<if test="searchOption != null and searchOption != ''">
				<choose>
					<when test="searchOption == 'staff_id'">
						AND s.id LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchOption == 'staff_name'">
						AND s.name LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchOption == 'company_id'">
						AND c.id LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchOption == 'company_name'">
						AND c.name LIKE '%' || #{searchKeyword} || '%'
					</when>
				</choose>
			</if>
			AND s.authority >= 9999
		</where>
	</select>

	<!-- 페이지네이션용 페이지 수 조회 (관리자) -->
	<select id="selectCompanyAdministratorCount" resultType="int">
		SELECT count(*)
		FROM staff s
		INNER JOIN department d ON s.department_id
		= d.id
		INNER JOIN company c ON c.id = d.company_id
		<where>
			<if test="searchOption != null and searchOption != ''">
				<choose>
					<when test="searchOption == 'id'">
						AND s.id LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchOption == 'name'">
						AND s.name LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchOption == 'phone_number'">
						AND s.phone_number LIKE '%' || #{searchKeyword} ||
						'%'
					</when>
				</choose>
			</if>
			AND s.authority >= 9999
		</where>
	</select>

	<!-- 관리자 통계 : -->
	<select id="selectHiredDateChartData" parameterType="String"
		resultType="HiredDateChart">
		SELECT r.*
		FROM (SELECT TO_CHAR(s.hired_date,'YYYY')
		hired_date, COUNT(hired_date) staffCount
		FROM STAFF s
		WHERE s.COMPANY_ID
		= (
		SELECT s.company_id
		FROM STAFF s
		WHERE s.login_id = #{loginId}
		)
		GROUP
		BY TO_CHAR(s.hired_date,'YYYY')
		ORDER BY HIRED_DATE) r
	</select>


	<!-- 휴가 월 통계 -->
	<select id="selectMonthlyLeaveChartData" parameterType="String"
		resultType="MonthlyLeaveChart">
    <![CDATA[
        SELECT
        ALL_MONTHS.MONTH,
        NVL(ROUND((RATIO_TO_REPORT(L.COUNT) OVER() * 100), 2), 0) AS RATE
        FROM (
            SELECT ROWNUM AS MONTH
            FROM (SELECT 1 FROM DUAL CONNECT BY ROWNUM <= 12)
        ) ALL_MONTHS
        LEFT JOIN (
            SELECT
                TO_NUMBER(TO_CHAR(STARTED_AT, 'MM')) AS MONTH,
                COUNT(*) AS COUNT
            FROM
                LEAVE L
            WHERE
                L.COMPANY_ID = (
                    SELECT S.COMPANY_ID
                    FROM STAFF S
                    WHERE S.LOGIN_ID = #{loginId}
                )
            GROUP BY
                TO_NUMBER(TO_CHAR(STARTED_AT, 'MM'))
        ) L
        ON ALL_MONTHS.MONTH = L.MONTH
        ORDER BY ALL_MONTHS.MONTH
    ]]>
	</select>

	<!-- 연령대 -->
	<select id="selectAgeChartData" parameterType="String"
		resultType="AgeChart">
		SELECT
		age,
		count(*) count
		FROM
		(
		SELECT
		CASE
		WHEN
		TO_CHAR(FLOOR((TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(S.BIRTHDATE,
		'YYYY')
		+ 1) / 10) * 10) || '대' = '대'
		THEN '알 수 없음'
		ELSE
		TO_CHAR(FLOOR((TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(S.BIRTHDATE,
		'YYYY')
		+ 1) / 10) * 10) || '대'
		END AGE
		FROM
		STAFF s
		WHERE
		s.company_id = (
		SELECT
		s.company_id
		FROM
		STAFF s
		WHERE
		s.login_id = #{loginId}
		))
		GROUP BY
		age
	</select>


	<!-- 부서별 결재 기안 수 -->
	<select id="selectApprovalChartData" parameterType="String" resultType="ApprovalChart">
		SELECT d.name departmentName, COUNT(*) count
		FROM APPROVAL a INNER JOIN STAFF s ON a.STAFF_ID = s.ID
		INNER JOIN DEPARTMENT d ON d.ID = s.DEPARTMENT_ID
		WHERE
		s.company_id = (
		SELECT
		s.company_id
		FROM
		STAFF s
		WHERE
		s.login_id = #{loginId}
		)
		GROUP BY d.name
	</select>
</mapper>